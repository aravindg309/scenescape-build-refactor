# Copyright (C) 2021-2025 Intel Corporation
#
# This software and the related documents are Intel copyrighted materials,
# and your use of them is governed by the express license under which they
# were provided to you ("License"). Unless the License provides otherwise,
# you may not use, modify, copy, publish, distribute, disclose or transmit
# this software or the related documents without Intel's prior written permission.
#
# This software and the related documents are provided as is, with no express
# or implied warranties, other than those that are expressly stated in the License.

FROM ubuntu:22.04 AS controller-builder

# We use root for runtime init. The command in ENTRYPOINT will drop to an unprivileged user.
# hadolint ignore=DL3002
USER root

ARG USER_ID
ARG CERTDOMAIN=scenescape.intel.com

ENV DEBIAN_FRONTEND=noninteractive

# TODO: move runtime dependencies to controller-runtime stage
RUN : \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
        # Keep package list in alphabetical order
        cmake \
        curl \
        g++ \
        git \
        libeigen3-dev \
        libglib2.0-0 \
        libgl1-mesa-glx \
        libgtest-dev \
        libopencv-dev \
        make \
        netbase \
        patch \
        pybind11-dev \
        python-is-python3 \
        python3-pip \
        # TODO: investigate why removing this breaks the build. scipy is included in requirements-controller.txt
        python3-scipy \
        python3-venv \
        sudo \
    && apt-get purge -y python3-numpy \
    && rm -rf /var/lib/apt/lists/*

ENV ENV_DIR=/tmp/venv

# create virtual environment and install 3rd party python dependencies
COPY requirements-controller.txt /tmp
RUN : \
    && mkdir ${ENV_DIR} \
    && python3 -m venv --system-site-packages ${ENV_DIR} \
    && ${ENV_DIR}/bin/pip3 install --upgrade --no-cache-dir pip \
    && ${ENV_DIR}/bin/pip3 install --upgrade --no-cache-dir -r /tmp/requirements-controller.txt \
    && rm -rf /tmp/requirements-controller.txt

# TODO: use slimmer image for runtime stage
FROM ubuntu:22.04 AS controller-runtime

# TODO: move run-time dependencies from controller-builder to here
RUN apt-get update \
    && apt-get-install \
        pybind11-dev \
        python3-venv \
        python-is-python3 \
    && rm -rf /var/lib/apt/lists/*

ENV WSUSER=scenescape
ENV SCENESCAPE_HOME=/home/$WSUSER/SceneScape
# ENV BUILD_ENV_DIR=/tmp/venv
# ENV ENV_DIR=/home/$WSUSER/venv
ENV ENV_DIR=/tmp/venv

RUN : \
    && useradd -r -m -s /bin/bash $WSUSER \
    && usermod -a -G video,users $WSUSER \
    && eval WSHOME=~$WSUSER \
    && chmod a+rX "${WSHOME}"

COPY --from=controller-builder $ENV_DIR $ENV_DIR

COPY --from=controller-builder /usr/bin/opencv_* /usr/bin/
COPY --from=controller-builder /usr/include/opencv4 /usr/include/
COPY --from=controller-builder /usr/include/opencv4 /usr/include/
COPY --from=controller-builder /usr/include/x86_64-linux-gnu/opencv4 /usr/include/x86_64-linux-gnu/
COPY --from=controller-builder /usr/lib/x86_64-linux-gnu/cmake/opencv4 /usr/lib/x86_64-linux-gnu/cmake/
COPY --from=controller-builder /usr/lib/x86_64-linux-gnu/libopencv_* /usr/lib/x86_64-linux-gnu/
COPY --from=controller-builder /usr/lib/x86_64-linux-gnu/pkgconfig/opencv4.pc /usr/lib/x86_64-linux-gnu/pkgconfig/

# TODO: copy all runtime dependencies from controller-builder

# TODO: use non-root user for runtime as soon as possible
# USER $WSUSER
# WORKDIR $SCENESCAPE_HOME

# TODO: Use COPY from context instead of tar ball
# Install robot vision package
ADD robot_vision.tar /tmp/
RUN export OpenCV_DIR="/usr/lib/x86_64-linux-gnu/cmake/opencv4" \
    && cd /tmp/robot_vision \
    && ${ENV_DIR}/bin/python3 setup.py bdist_wheel \
    && cd dist \
    && ${ENV_DIR}/bin/pip3 install --no-cache-dir ./*.whl \
    && cd \
    && rm -rf /tmp/robot_vision

# TODO: move it to builder stage
# Install scene common
ADD scene_common.tar tmp/
RUN cd tmp/scene_common \
    && ${ENV_DIR}/bin/pip install --no-cache-dir . \
    && make -C fast_geometry -j $(nproc) all install \
    && cd .. \
    && rm -rf scene_common

# TODO: Use COPY from context instead of tar ball
ADD controller.tar $SCENESCAPE_HOME/
RUN eval WSHOME=~$WSUSER \
    && chown -R "$WSUSER" "$SCENESCAPE_HOME" \
    && ${ENV_DIR}/bin/pip3 install --no-cache-dir "$SCENESCAPE_HOME/"

#RUN : \
#    && apt-get purge -y --auto-remove make cmake git \
#    && apt-get clean \
#    && rm -rf /var/lib/apt/lists/* \
#    &&

COPY controller-init /usr/local/bin/

ENTRYPOINT ["/usr/local/bin/controller-init"]
